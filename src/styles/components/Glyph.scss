.Glyph {
  position: relative;
  margin: 0;
  border-radius: $glyph-radius;
  transform-origin: $button-torigin;
  background: $alpha-black-sm;
  &, * {
    transition: $transition-bounce;
    &:active {
      transition: 50ms ease-out;
    }
  }

  .Glyph-underlay {
    @extend %overlay;
    border-radius: inherit;
    background-color: $alpha-black-sm;
    box-shadow: $inset-shadow-lg;
  }

  .Glyph-content {
    font-weight: bold;
    position: relative;
    @extend %flex-center;
    @include square-glyph($glyph-size-sm, $glyph-font-fac);
    @extend %glyph-surface-texture;
    @extend %flex-center;
    text-align: center;
    border-radius: inherit;
    box-shadow: $emboss, power-shadow($black-d1, 1.5);
    cursor: pointer;
    & > span {
      @include glow($primary);
    }
  }

  @each $color, $hex in $glyph-colors {
    &.#{$color} .Glyph-content span {
      @include glow($hex);
    }
  }

  &.round {
    border-radius: 50%;
  }
  &.md .Glyph-content {
    @include square-glyph($glyph-size-md, $glyph-font-fac);
  }
  &.lg .Glyph-content {
    @include square-glyph($glyph-size-lg, $glyph-font-fac);
  }
  &.hide {
    .Glyph-content {
      opacity: 0;
      transform: scale(0.1);
      cursor: auto;
    }
  }
  &.highlight {
    &.hide .Glyph-underlay {
      box-shadow: inset 0 0 .4em -.1em $primary, $inset-shadow-lg;
    }
    &:not(.hide) {
      box-shadow:
        $emboss,
        power-shadow($black-d1, 3),
        power-shadow(rgba($primary, 0.5), 4);
      @each $color, $hex in $glyph-colors {
        &.#{$color} {
          box-shadow:
            $emboss,
            power-shadow($black-d1, 3),
            power-shadow(rgba($hex, 0.5), 4);
        }
      }
    }
  }
  &.free {
    .Glyph-underlay {
      display: none;
    }
    .Glyph-content {
      background-color: $black-l2;
      box-shadow: none;
      @extend %raise;
    }
  }

  &:active {
    color: $primary;
    transform: scale(0.9);
  }
}

.Pool .Glyph.hide {
  pointer-events: none;
  touch-action: none;
}
