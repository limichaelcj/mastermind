$z: 0;

.Dialogue {
  @extend %dialogue-texture;
  border-radius: $glyph-radius;
  min-width: 20rem;
  max-width: 90vw;
  min-height: $glyph-size-lg;
  position: relative;
  font-size: 1.5rem;
  box-shadow:
    $emboss,
    power-shadow($black-d1, 3),
    power-shadow($primary, 4),
    0 0 10rem -4rem $primary;
  padding: $glyph-size-md $p4 $p2;
  @extend %flex-column;

  .Dialogue-border {
    position: absolute;
    z-index: $z + 1;
    top: $p1;
    left: $p1;
    width: calc(100% - #{$p2});
    height: $p1;
    @extend %flex-center;
    @include border-top-edge(4px, $primary);
    &:after {
      content: '';
      position: absolute;
      bottom: 0;
      left: $p1;
      width: calc(100% - #{$p2});
      @include border-top-edge(2px, $primary);
    }
    .border-glyphs {
      position: relative;
      top: $p2;
      padding: $p1 $p2;
      width: 100%;
      @extend %flex-row;
      justify-content: space-between;
      .glyph-group {
        @extend %flex-row;
        justify-content: space-around;
        width: calc(50% - #{$glyph-size-lg / 2});
        span {
          font-size: .6rem;
          @include glow(rgba($primary, 0.4));
        }
      }
    }
  }

  .Dialogue-icon {
    position: absolute;
    top: $p1;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: $z + 3;
    @extend %glyph-sized-lg;
    @extend %dialogue-texture;
    border: 5px solid $primary;
    box-shadow: 0 0 $p2 -$p1 $primary;
    border-radius: 50%;
    @extend %flex-center;
    text-align: center;
    &, * {
      @include glow($primary);
    }

  }

  .Dialogue-detail {
    $s: 5px;
    position: absolute;
    bottom: $p4;
    left: $p1;
    height: $p2;
    padding-left: $p2;
    z-index: $z + 1;
    .line {
      display: inline-block;
      height: 100%;
      width: $s;
      margin-left: $s * 1.7;
      transform: skew(25deg);
      @include glow-box($primary);
      border-radius: $glyph-radius;
    }
    .line:first-of-type {
      left: $p2;
    }
    .line:nth-of-type(2) {
      left: $p2 * 2;
    }
    .line:nth-of-type(3) {
      left: $p2 * 3;
    }
  }

  .Dialogue-content {
    position: relative;
    z-index: $z + 2;

    .dark-text {
      @include letterpress($black-d1);
    }
    .light-text {
      @include glow($alpha-white);
    }
    .glow-text {
      @include glow($primary);
    }
  }

  .Dialogue-action {
    min-height: $p4;
    padding-left: $glyph-size-md;
    font-size: 1.5rem;
    @extend %flex-row;
    justify-content: flex-end;
    align-items: center;
    .Dialogue-button:not(:first-child) {
      margin-left: $p2;
      padding: $p1 $p2;
    }
  }

}

// React CSS Transition Group
.Dialogue-enter {
  opacity: 0;
  .Dialogue {
    transform: scale(0) translate(0, 25%);
  }

  &.Dialogue-enter-active {
    opacity: 1;
    transition: $transition-default;
    .Dialogue {
      transform: scale(1) translate(0, 0);
      transition: $transition-bounce;
    }
  }
}

.Dialogue-leave {
  opacity: 1;
  .Dialogue {
    transform: scale(1), translate(0, 0);
  }

  &.Dialogue-leave-active {
    opacity: 0;
    transition: $transition-default;
    .Dialogue {
      transform: scale(0) translate(0, 25%);
      transition: $transition-bounce;
    }
  }
}
