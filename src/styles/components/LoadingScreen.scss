.LoadingScreen {
  color: $primary;
  z-index: 100;
  transform-style: preserve-3d;

  *:not(p) {
    @extend %glyph-sized-lg;
  }
  p {
    margin-top: $glyph-size-lg + $p2;
    color: $primary;
    font-size: 0.7rem;
    text-align: center;
    white-space: nowrap;
  }
  .LoadingScreen-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: $primary;
    & > * {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
    .icon-underlay {
      border-radius: 50%;
      height: 1px;
      width: 1px;
      transform: translate(-50%, -50%) scale(1.6);
      animation: pulse-primary 1.7s ease infinite;
    }
    .icon-item {
      @extend %flex-center;
      svg {
        animation: heartbeat 1.7s ease infinite;
      }
    }
  }
}

// Spinner
.LoadingScreen-spinner {
  position: absolute;
  z-index: 20;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotateX(70deg);

  figure {
    position: absolute;
    &:nth-of-type(2) {
      transform: rotate(180deg);
    }
    &:after {
      content: '';
      position: absolute;
      color: rgba($white, 0.8);
      font-size: 90px;
      overflow: hidden;
      width: 1em;
      height: 1em;
      border-radius: 50%;
      transform: translateZ(0);
      animation: load6 1.7s ease infinite, round 1.7s ease infinite;
    }
  }
}

// ReactCSSTransitionGroup classes
.LoadingScreen-enter {
  opacity: 0;
  .LoadingScreen {
    transform: scale(0) translate(0, 25%);
  }

  &.LoadingScreen-enter-active {
    opacity: 1;
    transition: $transition-default;
    .LoadingScreen {
      transform: scale(1) translate(0, 0);
      transition: $transition-bounce;
    }
  }
}

.LoadingScreen-leave {
  opacity: 1;
  .LoadingScreen {
    transform: scale(1), translate(0, 0);
  }

  &.LoadingScreen-leave-active {
    opacity: 0;
    transition: $transition-default;
    .LoadingScreen {
      transform: scale(0) translate(0, 25%);
      transition: $transition-bounce;
    }
  }
}

@-webkit-keyframes load6 {
  0% {
    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;
  }
  5%,
  95% {
    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;
  }
  10%,
  59% {
    box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;
  }
  20% {
    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;
  }
  38% {
    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;
  }
  100% {
    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;
  }
}
@keyframes load6 {
  0% {
    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;
  }
  5%,
  95% {
    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;
  }
  10%,
  59% {
    box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;
  }
  20% {
    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;
  }
  38% {
    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;
  }
  100% {
    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;
  }
}
@-webkit-keyframes round {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes round {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
